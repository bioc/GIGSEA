% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutationMultiLm.R
\name{permutationMultiLm}
\alias{permutationMultiLm}
\title{permutationMultiLm}
\usage{
permutationMultiLm(fc, net, weights = rep(1, nrow(net)), num = 100)
}
\arguments{
\item{fc}{a vector of numeric values representing the gene expression fold change}

\item{net}{a matrix of numeric values in the size of sample*feature representing the gene sets}

\item{weights}{a vector of numeric values representing the weights of samples}

\item{num}{a vector of integer values representing the number of permutations}
}
\value{
a data frame comprising the following columns:
\itemize{
\item {term} a vector of character incidating the name of gene set.
\item {usedGenes} a vector of numeric values indicating the number of gene used in the model.
\item {Estimate} a vector of numeric values indicating the regression coefficients.
\item {Std..Error} a vector of numeric values indicating the standard errors of regression coefficients.
\item {t.value} a vector of numeric values indicating the t-statistics of regression coefficients.
\item {observedPval} a vector of numeric values [0,1] indicating the p values from multiple weighted regression model.
\item {empiricalPval} a vector of numeric values [0,1] indicating the p values from permutation test.
}
}
\description{
permutationMultiLm is a permutation test to calculate the empirical p values for a multiple weighted linear regression.
}
\examples{

library(GIGSEA)
library(Matrix)

# load data
data(heart.metaXcan)
gene = heart.metaXcan$gene_name

# extract the imputed Z-score of gene differential expression, which follows normal distribution
fc <- heart.metaXcan$zscore

# use the prediction R^2 and fraction of imputation-used SNPs as weights
usedFrac <- heart.metaXcan$n_snps_used / heart.metaXcan$n_snps_in_cov
r2 <- heart.metaXcan$pred_perf_r2
weights <- usedFrac*r2

# build a new data frame for the following weighted linear regression-based enrichment analysis
data <- data.frame(gene,fc,weights)
head(data)

net <- MSigDB.KEGG.Pathway$net

# do intersection of genes between the user-provided imputed gene expression dataset and the gene sets of interest
data2 <- orderedIntersect( x = data , by.x = data$gene , by.y = rownames(net)  )
net2 <- orderedIntersect( x = net , by.x = rownames(net) , by.y = data$gene  )
all( rownames(net2) == as.character(data2$gene) )

# the SGSEA.res1 uses the single weighted linear regression model, while SGSEA.res2 used the weighted Pearson correlation. The latter one takes substantially less time.
MGSEA.res <- permutationMultiLm( fc=data2$fc , net=net2 , weights=data2$weights , num=100 )
head(MGSEA.res)

}
\references{

}
\seealso{
\code{\link{orderedIntersect}};
}
\author{
Shijia Zhu, \email{shijia.zhu@mssm.edu}
}
